There are considerable technical challenges to providing full acid compliant transactions at massive scale. Today, there are a few systems that build out their own attempts at cracking this problem. They include the Proprietary Systems, Splice Machine, and the open source projects, Apache Trafodion and Apache Phoenix. Interestingly, all three of these solutions are based on Apache HBase. They take the excellent performance of single row DAML in HBase, and add relational table structure and all the mechanisms needed for database consistency. Each project involves its own extensive additional software over HBase. These systems may be a good choice if you need to support massive databases, that have online transaction processing or OLTP. Like a large financial application, or a large travel scheduling system. Between the technical issues, the relative immaturity and the high expense, these systems are not so widely used as the other systems I'm discussing in this lesson. Since these systems fully implement SQL on big data, they can serve large analytic queries, such as the ones you will develop in this specialization. I think it's unlikely that you will see these systems on the job, especially not for data warehouse applications.