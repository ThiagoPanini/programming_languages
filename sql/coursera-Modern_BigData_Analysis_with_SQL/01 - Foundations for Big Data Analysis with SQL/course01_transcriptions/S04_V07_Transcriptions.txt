An assortment of software tools approach data warehouses at large-scale. But going forward, I will focus on the tools you use in this specialization. Apache Hive and Apache Impala. These open source tools are well established in the marketplace. Hive was contributed to the Apache Software Foundation in 2008 by Facebook, when Jeff Hammerbacher was head of data there, and before he went on to help co-found Cloudera. Impala was initially developed at Cloudera, and has been generally available since May, 2013 and became a top-level Apache project in November, 2017. By now, you have a conceptual foundation in SQL as it was originally intended, and as it is still used as the principal language of conventional relational database systems. A primary strength of SQL is the straightforward way unless you express a wide variety of analytic queries on data using SELECT statements. Indeed the expressive power of SELECT statements to answer so many questions from your data is the one feature you can reasonably expect from any system that claims at least partial support for some dialect of SQL. Some big data systems offer only very limited support, for example they might not allow multi-table selects. Other big data systems have much broader support for SELECT statements. Hive and Impala are examples of this. They support a wide variety of different SELECT statements, even more than some RDBMS's support. In order to write a SELECT statement, you must be able to view your data as residing in tables with named columns and of course Hive and Impala keep that ability. It's reasonable to let you manage table definitions with some dialect of data-definition or DDL that create, alter and drop statements. There are special variations of the create table statement in Hive and Impala, but the point is, this functionality is available in Hive and Impala. For managing different users access to data, Hive and Impala also support SQL grant and revoke statements. They're familiar data control or DCL statements in SQL